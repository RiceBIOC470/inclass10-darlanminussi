%In this directory, you will find some example data, which is a 300x8
%array stored in a .mat file. Image these are measurements for 300 genes are 8 different time
%points

%1. Use matlab to perform pca on this data, getting the transformation
%matrix, the transformed data, and the eigenvalues.

[coeff, sc, eig] = pca(dat);
disp(coeff);
disp(sc);
disp(eig);

%2. Look at the eigenvalues - how many dimensions are necessary to explain
%the data? 

disp(eig);
% The highest eigenvalue indicate the highest variance in the data,
% therefore, eigenvalues 1 and 2 are enough to explain most of the variance
% in the data, specially eigenvalue 1 of 5.63

%3. Using kmeans clustering to cluster the data into 3 clusters. 
% Make a plot of the first coordinate of the raw data vs the second color coded
% by which cluster it is in. Make the same plot but use the first two
% principle components instead. 

[idx, C] = kmeans(dat, 3);
tt = [1 2 3 4 5 6 7 8];

plot(dat(idx==1,1),dat(idx==1,2), 'r.', 'MarkerSize', 18);
hold on;
plot(dat(idx==2,1),dat(idx==2,2), 'b.', 'MarkerSize', 18);

biplot(coeff(:,1:2), 'scores', sc(:,1:2))

for ii = 1:3
    idxi = idx == ii;
    subplot(3, 1, ii);
    plot(tt, mean(dat(idxi,:),1), '.-','LineWidth', 3, 'MarkerSize', 18);
    title(['Cluster ' int2str(ii), 'ngenes: ' int2str(sum(idxi))]);
end

%4. Repeat part 3 but use 7 clusters. Which is a more appropriate number of
%clusters for the data?

idx_7k = kmeans(dat, 7);
tt = [1 2 3 4 5 6 7 8];

for ii = 1:7
    idxi = idx_7k == ii;
    subplot(3, 3, ii);
    plot(tt, mean(dat(idxi,:),1), '.-','LineWidth', 3, 'MarkerSize', 18);
    title(['Cluster ' int2str(ii), 'ngenes: ' int2str(sum(idxi))]);
end


% Based on the pca biplot we can see that 3 clusters is an approppriate
% number of cluster for the given data. Grouping 100 genes per cluster 




